spring:
  application:
    name: message

  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888}

  data:
    mongodb:
      uri: mongodb://localhost:27017/dipier

  cloud:
    config:
      uri: ${CONFIG_SERVER_URL:http://localhost:8888}
      enabled: true

  mail:
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: ${notification.email.ssl:true}
        transport:
          protocol: smtp

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}

notification:
  email:
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    ssl: true
    max-retries: 3

  sms:
    twilio-account-sid: ${TWILIO_ACCOUNT_SID}
    twilio-auth-token: ${TWILIO_AUTH_TOKEN}
    from-number: ${TWILIO_FROM_NUMBER}
    max-retries: 3

  push:
    firebase-config-path: ${FIREBASE_CONFIG_PATH}
    max-retries: 3

  queue:
    exchange-name: notification-exchange
    dead-letter-exchange: notification-dlq
    retry-delay: 5000
    name: notification-queue

server:
  port: ${SERVER_PORT:8080}

resilience4j:
  circuitbreaker:
    instances:
      emailService:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 30000
        permittedNumberOfCallsInHalfOpenState: 2
        registerHealthIndicator: true
    configs:
      default:
        registerHealthIndicator: true

  retry:
    instances:
      emailService:
        maxAttempts: 3
        waitDuration: 1000
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true

logging:
  level:
    root: INFO
    com.dipierplus.message: DEBUG
    org.springframework.mail: DEBUG
    org.springframework.cloud.config: DEBUG
    org.springframework.boot.autoconfigure: DEBUG

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
